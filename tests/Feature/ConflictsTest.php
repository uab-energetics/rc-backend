<?php

namespace Tests\Feature\api\users;

use App\Category;
use App\Encoding;
use App\EncodingExperimentBranch;
use App\Form;
use App\Models\Question;
use App\Models\Response;
use App\Project;
use App\Publication;
use App\Rules\QuestionRule;
use App\Services\Conflicts\ConflictScanner;
use App\User;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Support\Facades\DB;
use Tests\JWTTestCase;

class ConflictsTest extends JWTTestCase
{
    use DatabaseTransactions;

    /**
     * @var ConflictService
     */
    private $conflict_service;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->conflict_service = new ConflictScanner();
    }

    public function testConflictDetection() {

        $encoding = Encoding::first();

        $output = $this->conflict_service->runConflictScan($encoding->id);

//        echo json_encode($output, JSON_PRETTY_PRINT);

    }

    public function testConflictReportEndpoint(){
        $this->asAnonymousUser();
        $output = $this->json('GET', 'conflict-report/1');

        echo json_encode($output, JSON_PRETTY_PRINT);
    }
}